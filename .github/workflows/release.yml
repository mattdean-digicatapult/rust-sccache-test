name: Build new release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  pull-requests: read

jobs:
  build:
    name: Build Docker
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        volumes:
          - "/tmp/sccache:/data"
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@master
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: linux/amd64
    - name: Setup Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        buildkitd-flags: --debug
        driver-opts: network=${{ job.services.redis.network }}
    - name: Stop Redis service
      env:
        SERVICE_ID: ${{ job.services.redis.id }}
      run: |
        docker stop $SERVICE_ID
        sudo rm -rf /tmp/sccache
    - name: Cache Docker sccache
      uses: actions/cache@v2
      with:
        path: /tmp/sccache
        key: ${{ runner.os }}-docker-sccache-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-sccache-
    - name: Restart Redis service and configure
      timeout-minutes: 1
      env:
        SERVICE_ID: ${{ job.services.redis.id }}
        NETWORK: ${{ job.services.redis.network }}
      run: |
        docker start $SERVICE_ID
        while true; do
          sleep 5
          $STATUS=$(/usr/bin/docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" $SERVICE_ID)
          echo $STATUS
          [[ "$STATUS" == "healthy" ]] && break
        done
        # github service containers don't support args. As a workaround we configure redis as a cache whilst running
        /usr/bin/docker run --network=$NETWORK redis redis-cli -h localhost CONFIG SET maxmemory 500mb
        /usr/bin/docker run --network=$NETWORK redis redis-cli -h localhost CONFIG SET maxmemory-policy allkeys-lru
    - name: Get Redis IP
      id: redis-info
      run: |
        $ip=(docker inspect --format="{{print .NetworkSettings.Networks.custom_network.IPAddress }}" redis)
        echo "::set-output name=ip::$ip"
    - name: Build Dependency layers
      uses: docker/build-push-action@v2
      with:
        push: false
        builder: ${{ steps.buildx.outputs.name }}
        cache-from: type=local,src=${{ runner.temp }}/docker-buildx-cache
        cache-to: type=local,dest=${{ runner.temp }}/docker-buildx-cache-new,mode=max
        args: |
          BUILD_CONFIG_SCCACHE_REDIS=redis://${{ steps.redis-info.outputs.ip }}:6379
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
    - name: Save sccache to disk
      env:
        NETWORK: ${{ job.services.redis.network }}
      run: |
        /usr/bin/docker run --network=$NETWORK redis redis-cli -h localhost SAVE
